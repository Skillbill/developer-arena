#### DEPLOY TO TEST

- pipeline: "Deploy to Test"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://test.da.skillbill.net"
  actions:
  - action: "[BE] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${TAG}"
    dockerfile_path: "be/Dockerfile"
    context_path: "be"
    repository: "skillbillsrl/developer-arena-be"
    trigger_condition_paths:
    - "/be"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "[BO] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${TAG}"
    dockerfile_path: "bo/Dockerfile"
    context_path: "bo"
    repository: "skillbillsrl/developer-arena-bo"
    trigger_condition_paths:
    - "/bo"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "[DB] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${TAG}"
    dockerfile_path: "db/Dockerfile"
    context_path: "db"
    repository: "skillbillsrl/developer-arena-db"
    trigger_condition_paths:
    - "/db"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "[FE] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${TAG}"
    dockerfile_path: "fe/Dockerfile"
    context_path: "fe"
    repository: "skillbillsrl/developer-arena-fe"
    trigger_condition_paths:
    - "/fe"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Upload files to server"
    type: "SFTP"
    input_type: "SCM_REPOSITORY"
    local_path: "/"
    remote_path: "${WORKDIR}"
    login: "root"
    host: "${HOSTNAME_TEST}"
    port: "22"
    env_key: "test_rsa"
    authentication_mode: "ENV_KEY"
  - action: "Upload config files to server"
    type: "SFTP"
    input_type: "BUILD_ARTIFACTS"
    local_path: "/"
    remote_path: "${WORKDIR}"
    login: "root"
    host: "${HOSTNAME_TEST}"
    port: "22"
    env_key: "test_rsa"
    authentication_mode: "ENV_KEY"
  - action: "docker-compose restart"
    type: "SSH_COMMAND"
    working_directory: "${WORKDIR}"
    login: "root"
    host: "${HOSTNAME_TEST}"
    port: "22"
    env_key: "test_rsa"
    authentication_mode: "ENV_KEY"
    commands:
    - "set -e"
    - "echo \"$DOCKER_HUB_PASSWORD\" | \\"
    - "\tdocker login -u \"$DOCKER_HUB_USER\" --password-stdin"
    - "trap 'docker logout' 0"
    - "export TAG=${TAG}"
    - "docker-compose pull"
    - "docker-compose down --remove-orphans"
    - "docker-compose up -d"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Send notification to developer-arena channel"
    type: "SLACK"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "C9F0C1G64"
    channel_name: "developer-arena"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"good\",\"fields\":[{\"title\":\"Successful execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 30804
  - action: "Send notification to developer-arena channel"
    type: "SLACK"
    trigger_time: "ON_FAILURE"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "C9F0C1G64"
    channel_name: "developer-arena"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"danger\",\"fields\":[{\"title\":\"Failed execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 30811

### DEPLOY TO PREPROD

- pipeline: "Deploy to PRE"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "(refs/tags/.+-rc[0-9]+)"
  ref_type: "WILDCARD"
  target_site_url: "https://pre.da.skillbill.net"
  actions:
  - action: "[BE] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "be/Dockerfile"
    context_path: "be"
    repository: "skillbillsrl/developer-arena-be"
    trigger_condition: "ALWAYS"
  - action: "[BO] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "bo/Dockerfile"
    context_path: "bo"
    repository: "skillbillsrl/developer-arena-bo"
    trigger_condition: "ALWAYS"
  - action: "[DB] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "db/Dockerfile"
    context_path: "db"
    repository: "skillbillsrl/developer-arena-db"
    trigger_condition: "ALWAYS"
  - action: "[FE] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "fe/Dockerfile"
    context_path: "fe"
    repository: "skillbillsrl/developer-arena-fe"
    trigger_condition: "ALWAYS"
  - action: "Upload files to server"
    type: "SFTP"
    input_type: "SCM_REPOSITORY"
    local_path: "/"
    remote_path: "${WORKDIR}"
    login: "root"
    host: "${HOSTNAME_PRE}"
    port: "22"
    env_key: "pre_rsa"
    authentication_mode: "ENV_KEY"
  - action: "Upload config files to server"
    type: "SFTP"
    input_type: "BUILD_ARTIFACTS"
    local_path: "/"
    remote_path: "${WORKDIR}"
    login: "root"
    authentication_mode: "ENV_KEY"
    host: "${HOSTNAME_PRE}"
    port: "22"
    env_key: "pre_rsa"
    authentication_mode: "ENV_KEY"
  - action: "docker-compose restart"
    type: "SSH_COMMAND"
    working_directory: "${WORKDIR}"
    login: "root"
    host: "${HOSTNAME_PRE}"
    port: "22"
    env_key: "pre_rsa"
    authentication_mode: "ENV_KEY"
    commands:
    - "set -e"
    - "echo \"$DOCKER_HUB_PASSWORD\" | \\"
    - "\tdocker login -u \"$DOCKER_HUB_USER\" --password-stdin"
    - "trap 'docker logout' 0"
    - "export TAG=${execution.tag.name}"
    - "docker-compose pull"
    - "docker-compose down --remove-orphans"
    - "docker-compose up -d"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Send notification to developer-arena channel"
    type: "SLACK"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "C9F0C1G64"
    channel_name: "developer-arena"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"good\",\"fields\":[{\"title\":\"Successful execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Tag\",\"value\":\"${execution.tag.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 30804
  - action: "Send notification to developer-arena channel"
    type: "SLACK"
    trigger_time: "ON_FAILURE"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "C9F0C1G64"
    channel_name: "developer-arena"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"danger\",\"fields\":[{\"title\":\"Failed execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Tag\",\"value\":\"${execution.tag.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 30811

### DEPLOY TO PROD

- pipeline: "Deploy to PROD"
  trigger_mode: "MANUAL"
  ref_name: "refs/tags/*"
  ref_type: "WILDCARD"
  target_site_url: "https://da.skillbill.net"
  actions:
  - action: "[BE] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "be/Dockerfile"
    context_path: "be"
    repository: "skillbillsrl/developer-arena-be"
    trigger_condition: "ALWAYS"
  - action: "[BO] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "bo/Dockerfile"
    context_path: "bo"
    repository: "skillbillsrl/developer-arena-bo"
    trigger_condition: "ALWAYS"
  - action: "[DB] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "db/Dockerfile"
    context_path: "db"
    repository: "skillbillsrl/developer-arena-db"
    trigger_condition: "ALWAYS"
  - action: "[FE] Build Docker image"
    type: "DOCKERFILE"
    login: "${DOCKER_HUB_USER}"
    password: "${DOCKER_HUB_PASSWORD}"
    docker_image_tag: "${execution.tag.name}"
    dockerfile_path: "fe/Dockerfile"
    context_path: "fe"
    repository: "skillbillsrl/developer-arena-fe"
    trigger_condition: "ALWAYS"
  - action: "Upload files to server"
    type: "SFTP"
    input_type: "SCM_REPOSITORY"
    local_path: "/"
    remote_path: "${WORKDIR}"
    login: "root"
    host: "${HOSTNAME_PROD}"
    port: "22"
    env_key: "prod_rsa"
    authentication_mode: "ENV_KEY"
  - action: "Upload config files to server"
    type: "SFTP"
    input_type: "BUILD_ARTIFACTS"
    local_path: "/"
    remote_path: "${WORKDIR}"
    login: "root"
    authentication_mode: "ENV_KEY"
    host: "${HOSTNAME_PROD}"
    port: "22"
    env_key: "prod_rsa"
    authentication_mode: "ENV_KEY"
  - action: "docker-compose restart"
    type: "SSH_COMMAND"
    working_directory: "${WORKDIR}"
    login: "root"
    host: "${HOSTNAME_PROD}"
    port: "22"
    env_key: "prod_rsa"
    authentication_mode: "ENV_KEY"
    commands:
    - "set -e"
    - "echo \"$DOCKER_HUB_PASSWORD\" | \\"
    - "\tdocker login -u \"$DOCKER_HUB_USER\" --password-stdin"
    - "trap 'docker logout' 0"
    - "export TAG=${execution.tag.name}"
    - "docker-compose pull"
    - "docker-compose down --remove-orphans"
    - "docker-compose up -d"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Send notification to developer-arena channel"
    type: "SLACK"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "C9F0C1G64"
    channel_name: "developer-arena"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"good\",\"fields\":[{\"title\":\"Successful execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Tag\",\"value\":\"${execution.tag.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 30804
  - action: "Send notification to developer-arena channel"
    type: "SLACK"
    trigger_time: "ON_FAILURE"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "C9F0C1G64"
    channel_name: "developer-arena"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"danger\",\"fields\":[{\"title\":\"Failed execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Tag\",\"value\":\"${execution.tag.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 30811

### RESET DATABASE

- pipeline: "Reset database (TEST env)"
  trigger_mode: "MANUAL"
  ref_name: "master"
  ref_type: "BRANCH"
  actions:
  - action: "backup and destroy database volume"
    type: "SSH_COMMAND"
    login: "root"
    host: "${HOSTNAME_DEV}"
    port: "22"
    env_key: "dev_rsa"
    authentication_mode: "ENV_KEY"
    commands:
    - "docker-compose down db"
    - "tar -cvzf /var/backups/pgdata.`date '+%Y%m%d%H%M%S'`.tar.gz `docker inspect -f '{{.Mountpoint}}' pgdata`"
    - "docker volume rm pgdata"
    - "docker volume create pgdata"
    - "docker-compose up db"
    trigger_condition: "ALWAYS"
